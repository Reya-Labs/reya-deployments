#####################################
# Create Market
#####################################
[invoke.create_market_18pepe1k]
target = ["PassivePerpProxy"]
abi = "<%= JSON.stringify(contracts.PassivePerpProxy.abi.concat({'type':'event','name':'MarketDataUpdated','inputs':[{'name':'marketData','type':'tuple','indexed':false,'internalType':'struct Market.Data','components':[{'name':'id','type':'uint128','internalType':'uint128'},{'name':'passivePoolId','type':'uint128','internalType':'uint128'},{'name':'poolAccountId','type':'uint128','internalType':'uint128'},{'name':'quoteToken','type':'address','internalType':'address'},{'name':'quoteTokenDecimals','type':'uint8','internalType':'uint8'},{'name':'lastFundingVelocity','type':'int256','internalType':'SD59x18'},{'name':'lastFundingRate','type':'int256','internalType':'SD59x18'},{'name':'lastFundingTimestamp','type':'uint256','internalType':'uint256'},{'name':'lastMTM','type':'tuple','internalType':'struct PriceData','components':[{'name':'price','type':'uint256','internalType':'UD60x18'},{'name':'timestamp','type':'uint256','internalType':'uint256'}]},{'name':'longTrackers','type':'tuple','internalType':'struct FundingAndADLTrackers','components':[{'name':'fundingValue','type':'int256','internalType':'SD59x18'},{'name':'baseMultiplier','type':'uint256','internalType':'UD60x18'},{'name':'adlUnwindPrice','type':'uint256','internalType':'UD60x18'}]},{'name':'shortTrackers','type':'tuple','internalType':'struct FundingAndADLTrackers','components':[{'name':'fundingValue','type':'int256','internalType':'SD59x18'},{'name':'baseMultiplier','type':'uint256','internalType':'UD60x18'},{'name':'adlUnwindPrice','type':'uint256','internalType':'UD60x18'}]},{'name':'openInterest','type':'uint256','internalType':'UD60x18'}]},{'name':'blockTimestamp','type':'uint256','indexed':false,'internalType':'uint256'}],'anonymous':false})) %>"
fromCall.func = "owner"
func = "createMarket"
args = ["Market 1000PEPE", "<%= settings.pool1RusdId %>"]
var.market_18pepe1k.event = "MarketDataUpdated"
var.market_18pepe1k.arg = 0
depends = [
    "invoke.core_register_instrument_passive_perp",
    "invoke.passive_pool_create_pool_1rusd",
    "invoke.create_market_17wif",
]

[var.market_18pepe1k_vars]
market18Pepe1kId = "<%= (String(settings.market_18pepe1k.id) === '18') ? settings.market_18pepe1k.id : parseUnits('0', 'assert market_18pepe1k_vars failed') %>"
depends = ["invoke.create_market_18pepe1k"]

##################################################
# Market's Collateral Pool Feature Flags
##################################################
[invoke.market_18pepe1k_unpause_cp]
target = ["CoreProxy"]
fromCall.func = "getCollateralPoolOwner"
fromCall.args = ["<%= settings.market18Pepe1kId %>"]
func = "setFeatureFlagAllowAll"
args = [
    "<%= keccak256(defaultAbiCoder.encode(['bytes32','uint128'],[keccak256(hexlify('collateralPoolEnabled')),settings.market18Pepe1kId])) %>",
    true,
]
depends = ["invoke.upgrade_core_proxy", "var.market_18pepe1k_vars"]

[invoke.market_18pepe1k_set_pausers_cp]
target = ["CoreProxy"]
fromCall.func = "getCollateralPoolOwner"
fromCall.args = ["<%= settings.market18Pepe1kId %>"]
func = "setDeniers"
args = [
    "<%= keccak256(defaultAbiCoder.encode(['bytes32','uint128'],[keccak256(hexlify('collateralPoolEnabled')),settings.market18Pepe1kId])) %>",
    [
        "<%= settings.pauser1 %>",
        "<%= settings.pauser2 %>",
        "<%= settings.pauser3 %>",
        "<%= settings.pauser4 %>",
    ],
]
depends = ["invoke.upgrade_core_proxy", "var.market_18pepe1k_vars"]

##################################################
# Market Feature Flags
##################################################
[invoke.market_18pepe1k_unpause_market]
target = ["PassivePerpProxy"]
fromCall.func = "owner"
func = "setFeatureFlagAllowAll"
args = [
    "<%= keccak256(defaultAbiCoder.encode(['bytes32','uint128'],[keccak256(hexlify('marketEnabled')),settings.market18Pepe1kId])) %>",
    true,
]
depends = ["invoke.upgrade_core_proxy", "var.market_18pepe1k_vars"]

[invoke.market_18pepe1k_set_pausers_market]
target = ["PassivePerpProxy"]
fromCall.func = "owner"
func = "setDeniers"
args = [
    "<%= keccak256(defaultAbiCoder.encode(['bytes32','uint128'],[keccak256(hexlify('marketEnabled')),settings.market18Pepe1kId])) %>",
    [
        "<%= settings.pauser1 %>",
        "<%= settings.pauser2 %>",
        "<%= settings.pauser3 %>",
        "<%= settings.pauser4 %>",
    ],
]
depends = ["invoke.upgrade_core_proxy", "var.market_18pepe1k_vars"]

#####################################
# Market Configuration
#####################################
[invoke.market_18pepe1k_set_market_config]
target = ["PassivePerpProxy"]
fromCall.func = "owner"
func = "setMarketConfiguration"
args = [
    "<%= settings.market18Pepe1kId %>",
    { riskMatrixIndex = "<%= settings.market18Pepe1k_riskMatrixIndex %>", maxOpenBase = "<%= parseEther(settings.market18Pepe1k_maxOpenBaseUnscaled) %>", velocityMultiplier = "<%= parseEther(settings.market18Pepe1k_velocityMultiplierUnscaled) %>", oracleNodeId = "<%= settings.market18Pepe1k_oracleNodeId %>", mtmWindow = "<%= settings.market18Pepe1k_mtmWindow %>", dutchConfig = { lambda = "<%= parseEther(settings.market18Pepe1k_dutchConfig_lambdaUnscaled) %>", minBase = "<%= parseEther(settings.market18Pepe1k_dutchConfig_minBaseUnscaled) %>" }, slippageParams = { phi = "<%= parseEther(settings.market18Pepe1k_slippageParams_phiUnscaled) %>", beta = "<%= parseEther(settings.market18Pepe1k_slippageParams_betaUnscaled) %>" }, minimumOrderBase = "<%= parseEther(settings.market18Pepe1k_minimumOrderBaseUnscaled) %>", baseSpacing = "<%= parseEther(settings.market18Pepe1k_baseSpacingUnscaled) %>", priceSpacing = "<%= parseEther(settings.market18Pepe1k_priceSpacingUnscaled) %>", depthFactor = "<%= parseEther(settings.market18Pepe1k_depthFactorUnscaled) %>", maxExposureFactor = "<%= parseEther(settings.market18Pepe1k_maxExposureFactorUnscaled) %>", maxPSlippage = "<%= parseEther(settings.market18Pepe1k_maxPSlippageUnscaled) %>", marketOrderMaxStaleDuration = "<%= settings.market18Pepe1k_marketOrderMaxStaleDuration %>", priceSpread = "<%= parseEther(settings.market18Pepe1k_priceSpreadUnscaled) %>", volatilityIndexMultiplier = "<%= parseEther(settings.market18Pepe1k_volatilityIndexMultiplierUnscaled) %>" },
]
depends = ["invoke.create_market_18pepe1k"]

#####################################
# Market's Collateral Pool Limits
#####################################
[invoke.market_18pepe1k_set_cp_limits]
target = ["CoreProxy"]
fromCall.func = "getCollateralPoolOwner"
fromCall.args = ["<%= settings.market18Pepe1kId %>"]
func = "setCollateralPoolLimits"
args = [
    "<%= settings.market18Pepe1kId %>",
    { maxMarkets = "1", maxCollaterals = "1" },
]
depends = ["invoke.create_market_18pepe1k"]

##################################################
# Market's Collateral Pool Insurance Fund
##################################################
[invoke.market_18pepe1k_insurance_fund_config]
target = ["CoreProxy"]
fromCall.func = "getCollateralPoolOwner"
fromCall.args = ["<%= settings.market18Pepe1kId %>"]
func = "configureCollateralPoolInsuranceFund"
args = [
    "<%= settings.market18Pepe1kId %>",
    # reusing params from CP 1 since this CP will get merged
    { accountId = "<%= settings.cp1Rusd_insuranceFundAccountId %>", liquidationFee = "<%= parseEther(settings.default_insuranceFund_liquidationFeeUnscaled) %>" },
]
depends = [
    "invoke.cp_1rusd_create_insurance_fund_account",
    "invoke.create_market_18pepe1k",
]

##################################################
# Merge Market's Collateral Pool 
##################################################
[invoke.market_18pepe1k_merge_collateral_pool]
target = ["CoreProxy"]
fromCall.func = "owner"
func = "mergeCollateralPools"
args = ["<%= settings.market1EthId %>", "<%= settings.market18Pepe1kId %>"]
depends = [
    "invoke.market_1eth_unpause_cp",
    "invoke.market_1eth_set_pausers_cp",
    "invoke.market_1eth_unpause_market",
    "invoke.market_1eth_set_pausers_market",
    "invoke.market_1eth_set_market_config",
    "invoke.market_1eth_set_cp_limits",
    "invoke.market_1eth_insurance_fund_config",
    "invoke.market_18pepe1k_unpause_cp",
    "invoke.market_18pepe1k_set_pausers_cp",
    "invoke.market_18pepe1k_unpause_market",
    "invoke.market_18pepe1k_set_pausers_market",
    "invoke.market_18pepe1k_set_market_config",
    "invoke.market_18pepe1k_set_cp_limits",
    "invoke.market_18pepe1k_insurance_fund_config",
]
