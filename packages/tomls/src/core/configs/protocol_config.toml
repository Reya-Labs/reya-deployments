[invoke.core_create_fee_collector_account]
target = ["CoreProxy"]
abi = "<%= JSON.stringify(contracts.CoreProxy.abi.concat({'type':'event','name':'AccountCreated','inputs':[{'name':'accountId','type':'uint128','indexed':true,'internalType':'uint128'},{'name':'owner','type':'address','indexed':true,'internalType':'address'},{'name':'trigger','type':'address','indexed':true,'internalType':'address'},{'name':'blockTimestamp','type':'uint256','indexed':false,'internalType':'uint256'}],'anonymous':false})) %>"
fromCall.func = "owner"
func = "createAccount"
args = ["<%= settings.owner %>"]
var.internalCoreFeeCollectorAccountId.event = "AccountCreated"
var.internalCoreFeeCollectorAccountId.arg = 0
depends = ["invoke.core_unpause", "invoke.core_enable_account_creation"]

# Command aboce was executed outside of cannon for 1729.
# If 1729, append _0 since the multicall created 2 accounts.
[var.core_fee_collector_account_id]
coreFeeCollectorAccountId = "<%= chainId === 1729 ? settings.internalCoreFeeCollectorAccountId_0 : settings.internalCoreFeeCollectorAccountId %>"
depends = ["invoke.core_create_fee_collector_account"]

[invoke.core_configure_protocol]
target = ["CoreProxy"]
fromCall.func = "owner"
func = "configureProtocol"
args = [
    { oracleManagerAddress = "<%= settings.oracleManagerProxy %>", exchangePassNFTAddress = "<%= contracts.ExchangePassProxy.address %>", feeCollectorAccountId = "<%= settings.coreFeeCollectorAccountId %>", yakRouterAddress = "<%= settings.camelotYakRouter %>", ordersGatewayAddress = "<%= contracts.OrdersGatewayProxy.address %>", passivePoolAddress = "<%= contracts.PassivePoolProxy.address %>" },
]
depends = ["invoke.core_create_fee_collector_account"]
