// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface IOrdersGatewayProxy {
    function batchExecute(
        ConditionalOrderDetails[] memory orders,
        EIP712Signature[] memory signatures
    ) external returns (bytes[] memory outputs);

    function updatePricesAndBatchExecute(
        bytes[] calldata signedOffchainDataArray,
        ConditionalOrderDetails[] memory orders,
        EIP712Signature[] calldata signatures
    )
        external
        returns (bytes[] memory outputs);

    error FeatureUnavailable(bytes32 which);

    function getConfiguration()
        external
        pure
        returns (Configuration.Data memory);

    function setConfiguration(Configuration.Data memory config) external;

    function managePermissionBySig(
        address owner,
        address target,
        bool permissionState,
        EIP712Signature calldata sig
    )
        external;
    
    function managePermission(address target, bool permissionState) external;

    error Unauthorized(address addr);

    function canExecute(
        ConditionalOrderDetails memory order,
        EIP712Signature memory signature
    ) external view returns (bool);

    function execute(
        ConditionalOrderDetails memory order,
        EIP712Signature memory signature
    ) external returns (bytes memory output);

    function hasUnorderedNonceBeenUsed(uint128 accountId, uint256 nonce)
        external
        view
        returns (bool);

    function verifySignature(
        ConditionalOrderDetails memory order,
        EIP712Signature memory signature
    ) external view returns (bool);

    function verifySigner(uint128 accountId, address signer)
        external
        view
        returns (bool);

    error HigherExecutionPrice(
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 executionPrice,
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 priceLimit
    );
    error InvalidSignature(
        ConditionalOrderDetails order,
        EIP712Signature signature
    );
    error LowerExecutionPrice(
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 executionPrice,
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 priceLimit
    );
    error NonceAlreadyUsed(
        ConditionalOrderDetails order,
        EIP712Signature signature
    );
    error OrderTypeNotFound(uint8 orderType);
    error SignatureExpired();
    error SignerNotAuthorized(
        ConditionalOrderDetails order,
        EIP712Signature signature
    );
    error ZeroStopLossOrderSize(StopLossOrderDetails stopLossOrder);

    error ReduceOnlyConditionFailed(uint128 marketId, uint128 accountId);

    function addToFeatureFlagAllowlist(bytes32 feature, address account)
        external;

    function getDeniers(bytes32 feature)
        external
        view
        returns (address[] memory);

    function getFeatureFlagAllowAll(bytes32 feature)
        external
        view
        returns (bool);

    function getFeatureFlagAllowlist(bytes32 feature)
        external
        view
        returns (address[] memory);

    function getFeatureFlagDenyAll(bytes32 feature)
        external
        view
        returns (bool);

    function isFeatureAllowed(bytes32 feature, address account)
        external
        view
        returns (bool);

    function removeFromFeatureFlagAllowlist(bytes32 feature, address account)
        external;

    function setDeniers(bytes32 feature, address[] memory deniers) external;

    function setFeatureFlagAllowAll(bytes32 feature, bool allowAll) external;

    function setFeatureFlagDenyAll(bytes32 feature, bool denyAll) external;

    event FeatureFlagAllowAllSet(bytes32 indexed feature, bool allowAll);
    event FeatureFlagAllowlistAdded(bytes32 indexed feature, address account);
    event FeatureFlagAllowlistRemoved(bytes32 indexed feature, address account);
    event FeatureFlagDeniersReset(bytes32 indexed feature, address[] deniers);
    event FeatureFlagDenyAllSet(bytes32 indexed feature, bool denyAll);
    error ValueAlreadyInSet();
    error ValueNotInSet();

    function acceptOwnership() external;

    function getImplementation() external view returns (address);

    function nominateNewOwner(address newNominatedOwner) external;

    function nominatedOwner() external view returns (address);

    function owner() external view returns (address);

    function renounceNomination() external;

    function simulateUpgradeTo(address newImplementation) external;

    function upgradeTo(address newImplementation) external;

    event OwnerChanged(address oldOwner, address newOwner);
    event OwnerNominated(address newOwner);
    event Upgraded(address indexed self, address implementation);
    error ImplementationIsSterile(address implementation);
    error NoChange();
    error NotAContract(address contr);
    error NotNominated(address addr);
    error UpgradeSimulationFailed();
    error ZeroAddress();

    event ConditionalOrderExecuted(
        ConditionalOrderDetails order,
        bytes output,
        uint256 blockTimestamp
    );
    event ConfigurationUpdated(
        Configuration.Data config,
        uint256 blockTimestamp
    );
    event FailedOrderBytes(
        uint256 orderIndex,
        ConditionalOrderDetails order,
        bytes reason,
        uint256 blockTimestamp
    );
    event FailedOrderMessage(
        uint256 orderIndex,
        ConditionalOrderDetails order,
        string reason,
        uint256 blockTimestamp
    );
    event SuccessfulOrder(
        uint256 orderIndex,
        ConditionalOrderDetails order,
        bytes output,
        uint256 blockTimestamp
    );
    event UnorderedNonceUsed(uint128 accountId, uint256 nonce);
    event OrdersGatewayPermissionUpdated(address owner, address target, bool permissionState, uint256 blockTimestamp);
}

interface Configuration {
    struct Data {
        address coreProxy;
        address passivePerpProxy;
    }
}

struct ConditionalOrderDetails {
    uint128 accountId;
    uint128 marketId;
    uint128 exchangeId;
    uint128[] counterpartyAccountIds;
    uint8 orderType;
    bytes inputs;
    address signer;
    uint256 nonce;
}

struct EIP712Signature {
    uint8 v;
    bytes32 r;
    bytes32 s;
    uint256 deadline;
}

struct StopLossOrderDetails {
    uint128 accountId;
    uint128 marketId;
    uint128 exchangeId;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 triggerPrice;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 priceLimit;
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"type":"function","name":"batchExecute","inputs":[{"name":"orders","type":"tuple[]","internalType":"struct ConditionalOrderDetails[]","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signatures","type":"tuple[]","internalType":"struct EIP712Signature[]","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"outputs","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"nonpayable"},{"type":"error","name":"FeatureUnavailable","inputs":[{"name":"which","type":"bytes32","internalType":"bytes32"}]},{"type":"function","name":"getConfiguration","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct Configuration.Data","components":[{"name":"coreProxy","type":"address","internalType":"address"},{"name":"passivePerpProxy","type":"address","internalType":"address"}]}],"stateMutability":"pure"},{"type":"function","name":"setConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct Configuration.Data","components":[{"name":"coreProxy","type":"address","internalType":"address"},{"name":"passivePerpProxy","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"Unauthorized","inputs":[{"name":"addr","type":"address","internalType":"address"}]},{"type":"function","name":"canExecute","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"output","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"hasUnorderedNonceBeenUsed","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifySignature","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifySigner","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"signer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"HigherExecutionPrice","inputs":[{"name":"executionPrice","type":"uint256","internalType":"UD60x18"},{"name":"priceLimit","type":"uint256","internalType":"UD60x18"}]},{"type":"error","name":"InvalidSignature","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}]},{"type":"error","name":"LowerExecutionPrice","inputs":[{"name":"executionPrice","type":"uint256","internalType":"UD60x18"},{"name":"priceLimit","type":"uint256","internalType":"UD60x18"}]},{"type":"error","name":"MatchOrderOutputsLengthMismatch","inputs":[{"name":"outputsLength","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NonceAlreadyUsed","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}]},{"type":"error","name":"OrderTypeNotFound","inputs":[{"name":"orderType","type":"uint8","internalType":"enum OrderType"}]},{"type":"error","name":"SignatureExpired","inputs":[]},{"type":"error","name":"SignerNotAuthorized","inputs":[{"name":"order","type":"tuple","internalType":"struct ConditionalOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderType","type":"uint8","internalType":"enum OrderType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"signer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}]},{"type":"error","name":"ZeroStopLossOrderSize","inputs":[{"name":"stopLossOrder","type":"tuple","internalType":"struct StopLossOrderDetails","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"triggerPrice","type":"uint256","internalType":"UD60x18"},{"name":"priceLimit","type":"uint256","internalType":"UD60x18"}]}]},{"type":"function","name":"addToFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getDeniers","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagAllowAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagDenyAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFeatureAllowed","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeFromFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDeniers","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"deniers","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFeatureFlagAllowAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"allowAll","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFeatureFlagDenyAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"denyAll","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"FeatureFlagAllowAllSet","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"allowAll","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"FeatureFlagAllowlistAdded","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeatureFlagAllowlistRemoved","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeatureFlagDeniersReset","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"deniers","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"FeatureFlagDenyAllSet","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"denyAll","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"error","name":"ValueAlreadyInSet","inputs":[]},{"type":"error","name":"ValueNotInSet","inputs":[]},{"type":"function","name":"acceptOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getImplementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"nominateNewOwner","inputs":[{"name":"newNominatedOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"nominatedOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceNomination","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"simulateUpgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnerChanged","inputs":[{"name":"oldOwner","type":"address","indexed":false,"internalType":"address"},{"name":"newOwner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnerNominated","inputs":[{"name":"newOwner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"self","type":"address","indexed":true,"internalType":"address"},{"name":"implementation","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ImplementationIsSterile","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"NoChange","inputs":[]},{"type":"error","name":"NotAContract","inputs":[{"name":"contr","type":"address","internalType":"address"}]},{"type":"error","name":"NotNominated","inputs":[{"name":"addr","type":"address","internalType":"address"}]},{"type":"error","name":"UpgradeSimulationFailed","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]}]
*/