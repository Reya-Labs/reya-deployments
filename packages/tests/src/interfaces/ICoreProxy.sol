// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity ^0.8.4;

interface ICoreProxy {
    function activateFirstMarketForAccount(uint128 accountId, uint128 marketId)
        external;

    function announceBackstopLpWithdraw(uint128 accountId) external;

    function createAccount(address accountOwner)
        external
        returns (uint128 accountId);

    function getAccountBlockExposuresByMarket(
        uint128 accountId,
        uint128 marketId
    ) external view returns (int256[] memory);

    function getAccountImMultiplier(uint128 accountId)
        external
        view
        returns (
            /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
            uint256
        );

    function getAccountOwner(uint128 accountId) external view returns (address);

    function getAccountPermissions(uint128 accountId)
        external
        view
        returns (AccountPermissions[] memory accountPerms);

    function getActiveMarketsPerQuoteCollateral(
        uint128 accountId,
        address quoteCollateral
    ) external view returns (uint128[] memory);

    function getCollateralInfo(uint128 accountId, address collateral)
        external
        view
        returns (CollateralInfo memory);

    function getCollateralPoolIdOfAccount(uint128 accountId)
        external
        view
        returns (uint128);

    function getLastCreatedAccountId() external view returns (uint128);

    function getNodeMarginInfo(uint128 accountId, address collateral)
        external
        view
        returns (MarginInfo memory);

    function getTokenMarginInfo(uint128 accountId, address collateral)
        external
        view
        returns (MarginInfo memory);

    function getUsdNodeMarginInfo(uint128 accountId)
        external
        view
        returns (MarginInfo memory);

    function grantAccountPermission(
        uint128 accountId,
        bytes32 permission,
        address user
    ) external;

    function grantAccountPermissionBySig(
        uint128 accountId,
        bytes32 permission,
        address user,
        EIP712Signature memory sig
    ) external;

    function hasAccountPermission(
        uint128 accountId,
        bytes32 permission,
        address user
    ) external view returns (bool);

    function isAuthorizedForAccount(
        uint128 accountId,
        bytes32 permission,
        address target
    ) external view returns (bool);

    function notifyAccountTransfer(
        address from,
        address to,
        uint128 accountId
    ) external;

    function renounceAccountPermission(uint128 accountId, bytes32 permission)
        external;

    function revokeAccountPermission(
        uint128 accountId,
        bytes32 permission,
        address user
    ) external;

    function revokeAccountPermissionBySig(
        uint128 accountId,
        bytes32 permission,
        address user,
        EIP712Signature memory sig
    ) external;

    function setCustomImMultiplier(
        uint128 accountId,
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 imMultiplier
    ) external;

    error AccountIsNotBackstopLp(
        uint128 accountId,
        uint128 backstopLpAccountId,
        uint256 blockTimestamp
    );
    error AccountNotFound(uint128 accountId);
    error AccountPermissionDenied(uint128 accountId, address target);
    error AccountPermissionNotGranted(
        uint128 accountId,
        bytes32 permission,
        address user
    );
    error ActiveAccount(uint128 accountId);
    error BackstopLpCooldownPeriodAlreadyActive(
        uint256 backstopLpAccountId,
        uint256 withdrawPeriodStartTimestamp,
        uint256 blockTimestamp
    );
    error BackstopLpWithdrawPeriodAlreadyActive(
        uint256 backstopLpAccountId,
        uint256 blockTimestamp
    );
    error CannotScheduleActiveTimer(bytes32 id, uint256 blockTimestamp);
    error CollateralCapExceeded(
        uint128 collateralPoolId,
        address collateral,
        uint256 collateralCap,
        uint256 poolBalance
    );
    error CollateralIsNotQuote(uint128 collateralPoolId, address collateral);
    error CollateralNotConfigured(uint128 collateralPoolId, address collateral);
    error CollateralPoolNotFound(uint128 id);
    error ExpiredTimerSchedule(
        bytes32 id,
        uint256 startTimestamp,
        uint256 blockTimestamp
    );
    error FeatureUnavailable(bytes32 which);
    error GlobalCollateralNotFound(address collateral);
    error InvalidAccountPermission(bytes32 permission);
    error InvalidFilledExposures(FilledExposure[] filledExposures);
    error MarketNotFound(uint128 marketId);
    error OnlyAccountTokenProxy(address origin);
    error OverflowInt256ToUint256();
    error OverflowUint256ToInt256();
    error OverflowUint256ToUint128();
    error OverflowUint8ToInt8();
    error PRBMath_MulDiv18_Overflow(uint256 x, uint256 y);
    error PRBMath_MulDiv_Overflow(uint256 x, uint256 y, uint256 denominator);
    error PRBMath_SD59x18_IntoUD60x18_Underflow(
        /* warning: missing UDVT support in source Solidity version; parameter is `SD59x18`. */
        int256 x
    );
    error PRBMath_SD59x18_Mul_InputTooSmall();
    error PRBMath_SD59x18_Mul_Overflow(
        /* warning: missing UDVT support in source Solidity version; parameter is `SD59x18`. */
        int256 x,
        /* warning: missing UDVT support in source Solidity version; parameter is `SD59x18`. */
        int256 y
    );
    error PRBMath_UD60x18_Sqrt_Overflow(
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 x
    );
    error PositionOutOfBounds();
    error ValueAlreadyInSet();
    error ValueNotInSet();
    error ZeroAddress();

    function getAssociatedSystem(bytes32 id)
        external
        view
        returns (address addr, bytes32 kind);

    function initOrUpgradeNft(
        bytes32 id,
        string memory name,
        string memory symbol,
        string memory uri,
        address impl
    ) external;

    event AssociatedSystemSet(
        bytes32 indexed kind,
        bytes32 indexed id,
        address proxy,
        address impl
    );
    error MismatchAssociatedSystemKind(bytes32 expected, bytes32 actual);
    error MissingAssociatedSystem(bytes32 id);
    error Unauthorized(address addr);

    function configureAutoExchange(
        uint128 collateralPoolId,
        AutoExchangeConfig memory config
    ) external;

    function getAutoExchangeConfiguration(uint128 collateralPoolId)
        external
        view
        returns (AutoExchangeConfig memory);

    error CollateralPoolUnauthorized(address owner);
    error InactiveCollateralPool(uint128 id);
    error InvalidAutoExchangeConfiguration(AutoExchangeConfig config);

    function calculateAvailableCollateralToBeAutoExchanged(
        uint128 accountId,
        address outCollateral,
        address quoteCollateral
    ) external view returns (uint256);

    function calculateMaxQuoteToCoverInAutoExchange(
        uint128 accountId,
        address inCollateral
    ) external view returns (uint256);

    function isCollateralInBubbleExhausted(
        uint128 accountId,
        address inCollateral
    ) external view returns (bool);

    function triggerAutoExchange(TriggerAutoExchangeInput memory input)
        external
        returns (AutoExchangeAmounts memory);

    error AccountBelowIM(uint128 accountId, int256 delta);
    error AccountNotEligibleForAutoExchange(
        uint128 accountId,
        address inCollateral
    );
    error CollateralPoolCollision(
        uint128 collateralPoolId,
        uint128 counterpartyCollateralPoolId
    );
    error NegativeAccountRealBalance(uint128 accountId, int256 realBalance);
    error SameAccountId(uint128 accountId);
    error SameQuoteAndcollateral(uint128 accountId, address inCollateral);
    error WithinBubbleCoverageNotExhausted(
        uint128 accountId,
        address inCollateral,
        address collateral
    );

    function getCollateralConfig(
        uint128 collateralPoolId,
        address collateralAddress
    )
        external
        view
        returns (
            CollateralConfig memory,
            ParentCollateralConfig memory,
            CachedCollateralConfig memory
        );

    function getGlobalCollateralConfig(address collateralAddress)
        external
        view
        returns (
            GlobalCollateralConfig memory config,
            GlobalCachedCollateralConfig memory cachedConfig
        );

    function setCollateralConfig(
        uint128 collateralPoolId,
        address collateralAddress,
        CollateralConfig memory baseConfig,
        ParentCollateralConfig memory parentConfig
    ) external;

    function setGlobalCollateralConfig(
        address collateralAddress,
        GlobalCollateralConfig memory config
    ) external;

    error CollateralLimitBreached(
        uint128 collateralPoolId,
        uint256 numberOfCollaterals,
        uint256 maxCollaterals
    );
    error IncorrectCollateralAdapter(address collateralAdapterAddress);
    error InvalidCollateralBaseConfiguration(CollateralConfig config);
    error InvalidCollateralParentConfiguration(ParentCollateralConfig config);
    error InvalidGlobalCollateralConfiguration(GlobalCollateralConfig config);
    error InvalidNewParentCollateral(
        uint128 collateralPoolId,
        address newParentCollateral
    );
    error QuoteCollateralCannotBecomeSupportingCollateral(
        uint128 collateralPoolId,
        address collateral
    );

    function getCollateralPoolBalance(
        uint128 collateralPoolId,
        address collateral
    ) external view returns (uint256);

    function getCollateralPoolLimits(uint128 collateralPoolId)
        external
        view
        returns (LimitConfig memory);

    function getCollateralPoolOwner(uint128 collateralPoolId)
        external
        view
        returns (address);

    function getLastCreatedRiskBlockId(uint128 collateralPoolId)
        external
        view
        returns (uint128);

    function grantConfigurationPermission(
        uint128 collateralPoolId,
        bytes32 permission,
        address user
    ) external;

    function hasConfigurationPermission(
        uint128 collateralPoolId,
        bytes32 permission,
        address user
    ) external view returns (bool);

    function mergeCollateralPools(
        uint128 parentCollateralPoolId,
        uint128 childCollateralPoolId
    ) external;

    function revokeConfigurationPermission(
        uint128 collateralPoolId,
        bytes32 permission,
        address user
    ) external;

    function setCollateralPoolLimits(
        uint128 collateralPoolId,
        LimitConfig memory limits
    ) external;

    function transferCollateralPoolOwnership(
        uint128 collateralPoolId,
        address newOwner
    ) external;

    error CannotMergePoolWithItself(uint128 id);
    error MarketLimitBreached(
        uint128 collateralPoolId,
        uint256 numberOfMarkets,
        uint256 maxMarkets
    );

    function deposit(
        uint128 accountId,
        address collateral,
        uint256 amount
    ) external;

    error FailedTransfer(address from, address to, uint256 value);
    error InsufficientAllowance(uint256 required, uint256 existing);
    error ZeroDeposit(uint128 accountId, address collateral);

    function getLastCreatedExchangeId() external view returns (uint128);

    function registerExchange(uint128 exchangeFeeCollectorAccountId)
        external
        returns (uint128 exchangeId);

    error ExchangeNotFound(uint128 exchangeId);
    error OnlyExchangePassOwner();

    function execute(uint128 accountId, Command[] memory commands)
        external
        returns (bytes[] memory outputs, MarginInfo memory usdNodeMarginInfo);

    function executeBySig(
        uint128 accountId,
        Command[] memory commands,
        EIP712Signature memory sig,
        bytes memory extraSignatureData
    )
        external
        returns (bytes[] memory outputs, MarginInfo memory usdNodeMarginInfo);

    error BackstopLpWithdrawPeriodInactive(
        uint128 backstopLpAccountId,
        uint256 blockTimestamp
    );
    error GlobalWithdrawLimitReached(address collateral);
    error InvalidCommandType(uint8 commandType);
    error SignatureExpired();
    error SignatureInvalid();
    error TransferFromAndToSameAccount(uint128 accountId);
    error ZeroTransfer(uint128 accountId, address collateral);
    error ZeroWithdraw(uint128 accountId, address collateral);

    function addToFeatureFlagAllowlist(bytes32 feature, address account)
        external;

    function getDeniers(bytes32 feature)
        external
        view
        returns (address[] memory);

    function getFeatureFlagAllowAll(bytes32 feature)
        external
        view
        returns (bool);

    function getFeatureFlagAllowlist(bytes32 feature)
        external
        view
        returns (address[] memory);

    function getFeatureFlagDenyAll(bytes32 feature)
        external
        view
        returns (bool);

    function isFeatureAllowed(bytes32 feature, address account)
        external
        view
        returns (bool);

    function removeFromFeatureFlagAllowlist(bytes32 feature, address account)
        external;

    function setDeniers(bytes32 feature, address[] memory deniers) external;

    function setFeatureFlagAllowAll(bytes32 feature, bool allowAll) external;

    function setFeatureFlagDenyAll(bytes32 feature, bool denyAll) external;

    event FeatureFlagAllowAllSet(bytes32 indexed feature, bool allowAll);
    event FeatureFlagAllowlistAdded(bytes32 indexed feature, address account);
    event FeatureFlagAllowlistRemoved(bytes32 indexed feature, address account);
    event FeatureFlagDeniersReset(bytes32 indexed feature, address[] deniers);
    event FeatureFlagDenyAllSet(bytes32 indexed feature, bool denyAll);

    function getCollateralPoolIdOfMarket(uint128 marketId)
        external
        view
        returns (uint128);

    function getLastCreatedMarketId() external view returns (uint128);

    function registerMarket(address quoteCollateral, string memory name)
        external
        returns (uint128 marketId);

    function setRiskBlockId(uint128 marketId, uint128 riskBlockId) external;

    error IncorrectMarketInterface(address market);
    error InstrumentNotFound(address instrumentAddress);
    error MissingRiskBlock(uint256 riskBlockId);
    error ZeroQuoteCollateralAddress();

    function isInstrumentRegistered(address instrumentAddress)
        external
        view
        returns (bool isRegisteredFlag);

    function setInstrumentRegistrationFlag(
        address instrumentAddress,
        bool isRegistered
    ) external;

    function configureCollateralPoolInsuranceFund(
        uint128 collateralPoolId,
        InsuranceFundConfig memory config
    ) external;

    function getCollateralPoolInsuranceFundConfiguration(
        uint128 collateralPoolId
    ) external view returns (InsuranceFundConfig memory config);

    error InvalidInsuranceFundConfiguration(InsuranceFundConfig config);

    function acceptOwnership() external;

    function getImplementation() external view returns (address);

    function nominateNewOwner(address newNominatedOwner) external;

    function nominatedOwner() external view returns (address);

    function owner() external view returns (address);

    function renounceNomination() external;

    function simulateUpgradeTo(address newImplementation) external;

    function upgradeTo(address newImplementation) external;

    event OwnerChanged(address oldOwner, address newOwner);
    event OwnerNominated(address newOwner);
    event Upgraded(address indexed self, address implementation);
    error ImplementationIsSterile(address implementation);
    error NoChange();
    error NotAContract(address contr);
    error NotNominated(address addr);
    error UpgradeSimulationFailed();

    function configureProtocol(ProtocolConfiguration.Data memory config)
        external;

    function getProtocolConfiguration()
        external
        pure
        returns (ProtocolConfiguration.Data memory);

    function configureLiquidation(
        uint128 collateralPoolId,
        LiquidationConfig memory config
    ) external;

    function configureRiskMultipliers(
        uint128 collateralPoolId,
        RiskMultipliers memory config
    ) external;

    function createRiskMatrix(
        uint128 collateralPoolId,
        /* warning: missing UDVT support in source Solidity version; parameter is `SD1x18`. */
        int64[][] memory values
    ) external returns (uint128 blockId);

    function getBackstopLPConfig(uint128 collateralPoolId)
        external
        view
        returns (BackstopLPConfig memory config);

    function getLiquidationConfig(uint128 collateralPoolId)
        external
        view
        returns (LiquidationConfig memory);

    function getRiskBlockMatrix(uint128 collateralPoolId, uint128 blockId)
        external
        view
        returns (
            /* warning: missing UDVT support in source Solidity version; parameter is `SD1x18`. */
            int64[][] memory
        );

    function getRiskBlockMatrixByMarket(uint128 marketId)
        external
        view
        returns (
            /* warning: missing UDVT support in source Solidity version; parameter is `SD1x18`. */
            int64[][] memory
        );

    function getRiskMultipliers(uint128 collateralPoolId)
        external
        view
        returns (RiskMultipliers memory);

    function setBackstopLPConfig(
        uint128 collateralPoolId,
        BackstopLPConfig memory config
    ) external;

    error InvalidBackstopConfiguration(BackstopLPConfig config);
    error InvalidBackstopLPAccount(uint128 accountId);
    error InvalidLiquidationConfiguration(LiquidationConfig config);
    error InvalidRiskMatrix(
        /* warning: missing UDVT support in source Solidity version; parameter is `SD1x18`. */
        int64[][] riskMatrix
    );
    error InvalidRiskMultipliers(RiskMultipliers config);
    error PRBMath_SD59x18_Abs_MinSD59x18();

    function executeLiquidationBid(
        uint128 liquidatableAccountId,
        uint128 bidSubmissionKeeperId,
        LiquidationBid memory liquidationBid
    ) external returns (ExecuteLiquidationBidOutput memory output);

    error AccountInsolvent(uint128 accountId, int256 marginBalance);
    error CheckSelfCall(address caller);
    error IncreasedLmDueLiquidation(
        uint128 accountId,
        address quoteCollateral,
        uint256 lmrBefore,
        uint256 lmrAfter
    );
    error InvalidPostLiquidationHookResponse();
    error InvalidPreLiquidationHookResponse();

    function executeDutchLiquidation(
        uint128 liquidatorAccountId,
        DutchLiquidationInput memory data
    ) external returns (DutchLiquidationOutput memory);

    error AccountAboveDutch(uint128 accountId, int256 delta);
    error AccountAboveLm(uint128 accountId, int256 delta);
    error AccountBelowAdl(uint128 accountId, int256 delta);
    error InvalidMarketIdOrder(uint128[] marketIds);
    error LiquidationBidOrdersOverflow(
        uint256 numberOfOrders,
        uint256 maxOrders
    );
    error MarketsAndInputsMismatch(
        uint256 numberOfMarketIds,
        uint256 numberOfInputs
    );
    error NonActiveMarketInLiquidationBid(uint128 accountId, uint128 marketId);
    error ZeroLiquidationBidOrders();

    function executeMatchOrder(
        address caller,
        uint128 marketId,
        uint128 accountId,
        uint128 exchangeId,
        uint128[] memory counterpartyAccountIds,
        bytes memory orderInputs
    ) external returns (bytes memory output);

    error InvalidMatchOrderFees(MatchOrderFees matchOrderFees);
    error NoCounterpartiesInMatchOrder();

    function executeBackstopLiquidation(
        uint128 liquidatableAccountId,
        uint128 keeperAccountId,
        address quoteCollateral,
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 backstopPercentage
    ) external;

    error AccountAboveAdl(uint128 accountId, int256 delta);
    error AccountAboveIMBuffer(uint128 accountId, int256 delta);
    error InvalidBackstopPercentage(
        uint128 accountId,
        address quoteCollateral,
        /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
        uint256 backstopPercentage
    );

    function executeTopRankedLiquidationBid(
        uint128 liquidatableAccountId,
        address quoteCollateral,
        uint128 bidSubmissionKeeperId
    ) external returns (ExecuteTopRankedLiquidationBidOutput memory);

    error EmptyLiquidationBidQueue(uint128 accountId, address quoteCollateral);
    error IncorrectLiquidationHookInterface(LiquidationBid liquidationBid);
    error LiquidationBidRewardOverflow(LiquidationBid liquidationBid);

    function getLiquidationBidQueue(
        uint128 liquidatableAccountId,
        address quoteCollateral
    ) external view returns (LiquidationBidQueueOutput memory output);

    function submitLiquidationBid(
        uint128 liquidatableAccountId,
        LiquidationBid memory liquidationBid
    ) external returns (SubmitLiquidationBidOutput memory);

    error AccountAboveMmr(uint128 accountId, int256 delta);
    error AccountBelowLm(uint128 accountId, int256 delta);
    error LiquidationBidQueueOverflow();
    error PRBMath_UD60x18_Convert_Overflow(uint256 x);
}

interface ProtocolConfiguration {
    struct Data {
        address oracleManagerAddress;
        address exchangePassNFTAddress;
        uint128 feeCollectorAccountId;
    }
}

enum CommandType {
    Deposit, // (core command) deposit collaterals
    Withdraw, // (core command) withdraw collaterals
    DutchLiquidation, // (core command) dutch liquidation of an account
    MatchOrder, // (market command) propagation of matched orders
    TransferBetweenMarginAccounts // (core command) transfer between two margin accounts
}

struct AccountPermissions {
    address user;
    bytes32[] permissions;
}

struct CollateralInfo {
    int256 netDeposits;
    int256 marginBalance;
    int256 realBalance;
}

struct MarginInfo {
    address collateral;
    int256 marginBalance;
    int256 realBalance;
    int256 initialDelta;
    int256 maintenanceDelta;
    int256 liquidationDelta;
    int256 dutchDelta;
    int256 adlDelta;
    int256 initialBufferDelta;
    uint256 liquidationMarginRequirement;
}

struct FilledExposure {
    uint256 riskMatrixIndex;
    int256 exposure;
}

struct AutoExchangeConfig {
    uint256 totalAutoExchangeThresholdInUSD;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 negativeCollateralBalancesMultiplier;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 quoteBufferPercentage;
}

struct TriggerAutoExchangeInput {
    uint128 accountId;
    uint128 liquidatorAccountId;
    uint256 requestedQuoteAmount;
    address collateral;
    address inCollateral;
}

struct AutoExchangeAmounts {
    uint256 collateralAmountToLiquidator;
    uint256 quoteAmountToIF;
    uint256 quoteAmountToAccount;
}

struct CollateralConfig {
    bool depositingEnabled;
    uint256 cap;
    uint32 withdrawalWindowSize_DEPRECATED;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 withdrawalTvlPercentageLimit_DEPRECATED;
    uint256 autoExchangeThreshold;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 autoExchangeInsuranceFee;
    uint256 autoExchangeDustThreshold;
    uint256 bidSubmissionFee;
}

struct ParentCollateralConfig {
    address collateralAddress;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 priceHaircut;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 autoExchangeDiscount;
    bytes32 oracleNodeId;
}

struct CachedCollateralConfig {
    uint128 collateralPoolId;
    address collateralAddress;
    uint256 windowWithdrawals_DEPRECATED;
    uint32 windowStartTimestamp_DEPRECATED;
}

struct GlobalCollateralConfig {
    address collateralAdapter;
    uint32 withdrawalWindowSize;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 withdrawalTvlPercentageLimit;
}

struct GlobalCachedCollateralConfig {
    address collateralAddress;
    uint8 collateralDecimals;
    uint256 windowWithdrawals;
    uint32 windowStartTimestamp;
}

struct LimitConfig {
    uint256 maxMarkets;
    uint256 maxCollaterals;
}

struct Command {
    uint8 commandType;
    bytes inputs;
    uint128 marketId;
    uint128 exchangeId;
}

struct EIP712Signature {
    uint8 v;
    bytes32 r;
    bytes32 s;
    uint256 deadline;
}

struct InsuranceFundConfig {
    uint128 accountId;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 liquidationFee;
}

struct LiquidationConfig {
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 bidKeeperFee;
    uint256 queueDurationInSeconds;
    uint256 maxOrdersInBid;
    uint256 maxBidsInQueue;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 bidScoreWeight;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 backstopKeeperFee;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 adlExecutionKeeperFee;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 dDutchMin;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 dMax;
}

struct RiskMultipliers {
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 imMultiplier;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 mmrMultiplier;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 dutchMultiplier;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 adlMultiplier;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 imBufferMultiplier;
}

struct BackstopLPConfig {
    uint128 accountId;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 liquidationFee;
    uint256 minFreeCollateralThresholdInUSD;
    uint256 withdrawCooldownDurationInSeconds;
    uint256 withdrawDurationInSeconds;
}

struct LiquidationBid {
    uint128 liquidatorAccountId;
    address hookAddress;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 liquidatorRewardParameter;
    address quoteCollateral;
    uint128[] marketIds;
    bytes[] inputs;
}

struct LiquidationRewards {
    uint256 insuranceFund;
    uint256 backstopLP;
    uint256 keeper;
    uint256 liquidator;
}

struct ExecuteLiquidationBidOutput {
    uint256 lmrDelta;
    LiquidationRewards rewards;
    bytes[] marketOutputs;
}

struct DutchLiquidationInput {
    uint128 liquidatableAccountId;
    address quoteCollateral;
    uint128[] marketIds;
    bytes[] inputs;
}

struct DutchLiquidationOutput {
    uint256 lmrDelta;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 healthPre;
    /* warning: missing UDVT support in source Solidity version; parameter is `UD60x18`. */
    uint256 rewardParameter;
    LiquidationRewards rewards;
    bytes[] marketOutputs;
}

struct MatchOrderFees {
    uint256 protocolFeeCredit;
    uint256 exchangeFeeCredit;
    uint256 takerFeeDebit;
    int256[] makerPayments;
}

struct ExecuteTopRankedLiquidationBidOutput {
    bool success;
    uint256 bidQueueIndex;
    uint256 bidIndex;
    ExecuteLiquidationBidOutput executionOutput;
}

struct LiquidationBidQueueItem {
    uint256 index;
    LiquidationBid bid;
    uint256 score;
}

struct LiquidationBidQueueOutput {
    uint256 bidQueueIndex;
    uint256 expirationTimestamp;
    LiquidationBidQueueItem[] bids;
}

struct SubmitLiquidationBidOutput {
    uint256 bidQueueIndex;
    uint256 bidScore;
    uint256 bidIndex;
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"type":"function","name":"activateFirstMarketForAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"announceBackstopLpWithdraw","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createAccount","inputs":[{"name":"accountOwner","type":"address","internalType":"address"}],"outputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"getAccountBlockExposuresByMarket","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"getAccountImMultiplier","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"UD60x18"}],"stateMutability":"view"},{"type":"function","name":"getAccountOwner","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAccountPermissions","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"accountPerms","type":"tuple[]","internalType":"struct AccountPermissions[]","components":[{"name":"user","type":"address","internalType":"address"},{"name":"permissions","type":"bytes32[]","internalType":"bytes32[]"}]}],"stateMutability":"view"},{"type":"function","name":"getActiveMarketsPerQuoteCollateral","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint128[]","internalType":"uint128[]"}],"stateMutability":"view"},{"type":"function","name":"getCollateralInfo","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct CollateralInfo","components":[{"name":"netDeposits","type":"int256","internalType":"int256"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"}]}],"stateMutability":"view"},{"type":"function","name":"getCollateralPoolIdOfAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getLastCreatedAccountId","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getNodeMarginInfo","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct MarginInfo","components":[{"name":"collateral","type":"address","internalType":"address"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"},{"name":"initialDelta","type":"int256","internalType":"int256"},{"name":"maintenanceDelta","type":"int256","internalType":"int256"},{"name":"liquidationDelta","type":"int256","internalType":"int256"},{"name":"dutchDelta","type":"int256","internalType":"int256"},{"name":"adlDelta","type":"int256","internalType":"int256"},{"name":"initialBufferDelta","type":"int256","internalType":"int256"},{"name":"liquidationMarginRequirement","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getTokenMarginInfo","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct MarginInfo","components":[{"name":"collateral","type":"address","internalType":"address"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"},{"name":"initialDelta","type":"int256","internalType":"int256"},{"name":"maintenanceDelta","type":"int256","internalType":"int256"},{"name":"liquidationDelta","type":"int256","internalType":"int256"},{"name":"dutchDelta","type":"int256","internalType":"int256"},{"name":"adlDelta","type":"int256","internalType":"int256"},{"name":"initialBufferDelta","type":"int256","internalType":"int256"},{"name":"liquidationMarginRequirement","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getUsdNodeMarginInfo","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct MarginInfo","components":[{"name":"collateral","type":"address","internalType":"address"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"},{"name":"initialDelta","type":"int256","internalType":"int256"},{"name":"maintenanceDelta","type":"int256","internalType":"int256"},{"name":"liquidationDelta","type":"int256","internalType":"int256"},{"name":"dutchDelta","type":"int256","internalType":"int256"},{"name":"adlDelta","type":"int256","internalType":"int256"},{"name":"initialBufferDelta","type":"int256","internalType":"int256"},{"name":"liquidationMarginRequirement","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"grantAccountPermission","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"grantAccountPermissionBySig","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"},{"name":"sig","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasAccountPermission","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAuthorizedForAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"notifyAccountTransfer","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"accountId","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceAccountPermission","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeAccountPermission","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeAccountPermissionBySig","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"},{"name":"sig","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setCustomImMultiplier","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"imMultiplier","type":"uint256","internalType":"UD60x18"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"AccountIsNotBackstopLp","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"backstopLpAccountId","type":"uint128","internalType":"uint128"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"AccountNotFound","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"AccountPermissionDenied","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"AccountPermissionNotGranted","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}]},{"type":"error","name":"ActiveAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"BackstopLpCooldownPeriodAlreadyActive","inputs":[{"name":"backstopLpAccountId","type":"uint256","internalType":"uint256"},{"name":"withdrawPeriodStartTimestamp","type":"uint256","internalType":"uint256"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BackstopLpWithdrawPeriodAlreadyActive","inputs":[{"name":"backstopLpAccountId","type":"uint256","internalType":"uint256"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CannotScheduleActiveTimer","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CollateralCapExceeded","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"},{"name":"collateralCap","type":"uint256","internalType":"uint256"},{"name":"poolBalance","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CollateralIsNotQuote","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"error","name":"CollateralNotConfigured","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"error","name":"CollateralPoolNotFound","inputs":[{"name":"id","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"ExpiredTimerSchedule","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"startTimestamp","type":"uint256","internalType":"uint256"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"FeatureUnavailable","inputs":[{"name":"which","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"GlobalCollateralNotFound","inputs":[{"name":"collateral","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidAccountPermission","inputs":[{"name":"permission","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"InvalidFilledExposures","inputs":[{"name":"filledExposures","type":"tuple[]","internalType":"struct FilledExposure[]","components":[{"name":"riskMatrixIndex","type":"uint256","internalType":"uint256"},{"name":"exposure","type":"int256","internalType":"int256"}]}]},{"type":"error","name":"MarketNotFound","inputs":[{"name":"marketId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"OnlyAccountTokenProxy","inputs":[{"name":"origin","type":"address","internalType":"address"}]},{"type":"error","name":"OverflowInt256ToUint256","inputs":[]},{"type":"error","name":"OverflowUint256ToInt256","inputs":[]},{"type":"error","name":"OverflowUint256ToUint128","inputs":[]},{"type":"error","name":"OverflowUint8ToInt8","inputs":[]},{"type":"error","name":"PRBMath_MulDiv18_Overflow","inputs":[{"name":"x","type":"uint256","internalType":"uint256"},{"name":"y","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"PRBMath_MulDiv_Overflow","inputs":[{"name":"x","type":"uint256","internalType":"uint256"},{"name":"y","type":"uint256","internalType":"uint256"},{"name":"denominator","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"PRBMath_SD59x18_IntoUD60x18_Underflow","inputs":[{"name":"x","type":"int256","internalType":"SD59x18"}]},{"type":"error","name":"PRBMath_SD59x18_Mul_InputTooSmall","inputs":[]},{"type":"error","name":"PRBMath_SD59x18_Mul_Overflow","inputs":[{"name":"x","type":"int256","internalType":"SD59x18"},{"name":"y","type":"int256","internalType":"SD59x18"}]},{"type":"error","name":"PRBMath_UD60x18_Sqrt_Overflow","inputs":[{"name":"x","type":"uint256","internalType":"UD60x18"}]},{"type":"error","name":"PositionOutOfBounds","inputs":[]},{"type":"error","name":"SignatureExpired","inputs":[]},{"type":"error","name":"SignatureInvalid","inputs":[]},{"type":"error","name":"ValueAlreadyInSet","inputs":[]},{"type":"error","name":"ValueNotInSet","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"function","name":"getAssociatedSystem","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"kind","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"initOrUpgradeNft","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"uri","type":"string","internalType":"string"},{"name":"impl","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AssociatedSystemSet","inputs":[{"name":"kind","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"proxy","type":"address","indexed":false,"internalType":"address"},{"name":"impl","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"MismatchAssociatedSystemKind","inputs":[{"name":"expected","type":"bytes32","internalType":"bytes32"},{"name":"actual","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"MissingAssociatedSystem","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"Unauthorized","inputs":[{"name":"addr","type":"address","internalType":"address"}]},{"type":"function","name":"configureAutoExchange","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"config","type":"tuple","internalType":"struct AutoExchangeConfig","components":[{"name":"totalAutoExchangeThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"negativeCollateralBalancesMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"quoteBufferPercentage","type":"uint256","internalType":"UD60x18"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAutoExchangeConfiguration","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct AutoExchangeConfig","components":[{"name":"totalAutoExchangeThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"negativeCollateralBalancesMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"quoteBufferPercentage","type":"uint256","internalType":"UD60x18"}]}],"stateMutability":"view"},{"type":"error","name":"CollateralPoolUnauthorized","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"InactiveCollateralPool","inputs":[{"name":"id","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"InvalidAutoExchangeConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct AutoExchangeConfig","components":[{"name":"totalAutoExchangeThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"negativeCollateralBalancesMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"quoteBufferPercentage","type":"uint256","internalType":"UD60x18"}]}]},{"type":"function","name":"calculateAvailableCollateralToBeAutoExchanged","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"outCollateral","type":"address","internalType":"address"},{"name":"quoteCollateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calculateMaxQuoteToCoverInAutoExchange","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"inCollateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isCollateralInBubbleExhausted","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"inCollateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"triggerAutoExchange","inputs":[{"name":"input","type":"tuple","internalType":"struct TriggerAutoExchangeInput","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"requestedQuoteAmount","type":"uint256","internalType":"uint256"},{"name":"collateral","type":"address","internalType":"address"},{"name":"inCollateral","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct AutoExchangeAmounts","components":[{"name":"collateralAmountToLiquidator","type":"uint256","internalType":"uint256"},{"name":"quoteAmountToIF","type":"uint256","internalType":"uint256"},{"name":"quoteAmountToAccount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"error","name":"AccountBelowIM","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"AccountNotEligibleForAutoExchange","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"inCollateral","type":"address","internalType":"address"}]},{"type":"error","name":"CollateralPoolCollision","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"counterpartyCollateralPoolId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"NegativeAccountRealBalance","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"realBalance","type":"int256","internalType":"int256"}]},{"type":"error","name":"SameAccountId","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"SameQuoteAndcollateral","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"inCollateral","type":"address","internalType":"address"}]},{"type":"error","name":"WithinBubbleCoverageNotExhausted","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"inCollateral","type":"address","internalType":"address"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"function","name":"getCollateralConfig","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateralAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct CollateralConfig","components":[{"name":"depositingEnabled","type":"bool","internalType":"bool"},{"name":"cap","type":"uint256","internalType":"uint256"},{"name":"withdrawalWindowSize_DEPRECATED","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit_DEPRECATED","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeThreshold","type":"uint256","internalType":"uint256"},{"name":"autoExchangeInsuranceFee","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDustThreshold","type":"uint256","internalType":"uint256"},{"name":"bidSubmissionFee","type":"uint256","internalType":"uint256"}]},{"name":"","type":"tuple","internalType":"struct ParentCollateralConfig","components":[{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"priceHaircut","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDiscount","type":"uint256","internalType":"UD60x18"},{"name":"oracleNodeId","type":"bytes32","internalType":"bytes32"}]},{"name":"","type":"tuple","internalType":"struct CachedCollateralConfig","components":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"windowWithdrawals_DEPRECATED","type":"uint256","internalType":"uint256"},{"name":"windowStartTimestamp_DEPRECATED","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"getGlobalCollateralConfig","inputs":[{"name":"collateralAddress","type":"address","internalType":"address"}],"outputs":[{"name":"config","type":"tuple","internalType":"struct GlobalCollateralConfig","components":[{"name":"collateralAdapter","type":"address","internalType":"address"},{"name":"withdrawalWindowSize","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit","type":"uint256","internalType":"UD60x18"}]},{"name":"cachedConfig","type":"tuple","internalType":"struct GlobalCachedCollateralConfig","components":[{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"collateralDecimals","type":"uint8","internalType":"uint8"},{"name":"windowWithdrawals","type":"uint256","internalType":"uint256"},{"name":"windowStartTimestamp","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"setCollateralConfig","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"baseConfig","type":"tuple","internalType":"struct CollateralConfig","components":[{"name":"depositingEnabled","type":"bool","internalType":"bool"},{"name":"cap","type":"uint256","internalType":"uint256"},{"name":"withdrawalWindowSize_DEPRECATED","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit_DEPRECATED","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeThreshold","type":"uint256","internalType":"uint256"},{"name":"autoExchangeInsuranceFee","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDustThreshold","type":"uint256","internalType":"uint256"},{"name":"bidSubmissionFee","type":"uint256","internalType":"uint256"}]},{"name":"parentConfig","type":"tuple","internalType":"struct ParentCollateralConfig","components":[{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"priceHaircut","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDiscount","type":"uint256","internalType":"UD60x18"},{"name":"oracleNodeId","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setGlobalCollateralConfig","inputs":[{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"config","type":"tuple","internalType":"struct GlobalCollateralConfig","components":[{"name":"collateralAdapter","type":"address","internalType":"address"},{"name":"withdrawalWindowSize","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit","type":"uint256","internalType":"UD60x18"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"CollateralLimitBreached","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"numberOfCollaterals","type":"uint256","internalType":"uint256"},{"name":"maxCollaterals","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"IncorrectCollateralAdapter","inputs":[{"name":"collateralAdapterAddress","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidCollateralBaseConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct CollateralConfig","components":[{"name":"depositingEnabled","type":"bool","internalType":"bool"},{"name":"cap","type":"uint256","internalType":"uint256"},{"name":"withdrawalWindowSize_DEPRECATED","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit_DEPRECATED","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeThreshold","type":"uint256","internalType":"uint256"},{"name":"autoExchangeInsuranceFee","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDustThreshold","type":"uint256","internalType":"uint256"},{"name":"bidSubmissionFee","type":"uint256","internalType":"uint256"}]}]},{"type":"error","name":"InvalidCollateralParentConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct ParentCollateralConfig","components":[{"name":"collateralAddress","type":"address","internalType":"address"},{"name":"priceHaircut","type":"uint256","internalType":"UD60x18"},{"name":"autoExchangeDiscount","type":"uint256","internalType":"UD60x18"},{"name":"oracleNodeId","type":"bytes32","internalType":"bytes32"}]}]},{"type":"error","name":"InvalidGlobalCollateralConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct GlobalCollateralConfig","components":[{"name":"collateralAdapter","type":"address","internalType":"address"},{"name":"withdrawalWindowSize","type":"uint32","internalType":"uint32"},{"name":"withdrawalTvlPercentageLimit","type":"uint256","internalType":"UD60x18"}]}]},{"type":"error","name":"InvalidNewParentCollateral","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"newParentCollateral","type":"address","internalType":"address"}]},{"type":"error","name":"QuoteCollateralCannotBecomeSupportingCollateral","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"function","name":"getCollateralPoolBalance","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCollateralPoolLimits","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct LimitConfig","components":[{"name":"maxMarkets","type":"uint256","internalType":"uint256"},{"name":"maxCollaterals","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getCollateralPoolOwner","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getLastCreatedRiskBlockId","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"grantConfigurationPermission","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasConfigurationPermission","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mergeCollateralPools","inputs":[{"name":"parentCollateralPoolId","type":"uint128","internalType":"uint128"},{"name":"childCollateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeConfigurationPermission","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"permission","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setCollateralPoolLimits","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"limits","type":"tuple","internalType":"struct LimitConfig","components":[{"name":"maxMarkets","type":"uint256","internalType":"uint256"},{"name":"maxCollaterals","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferCollateralPoolOwnership","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"CannotMergePoolWithItself","inputs":[{"name":"id","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"MarketLimitBreached","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"numberOfMarkets","type":"uint256","internalType":"uint256"},{"name":"maxMarkets","type":"uint256","internalType":"uint256"}]},{"type":"function","name":"deposit","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"FailedTransfer","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InsufficientAllowance","inputs":[{"name":"required","type":"uint256","internalType":"uint256"},{"name":"existing","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ZeroDeposit","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"function","name":"getLastCreatedExchangeId","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"registerExchange","inputs":[{"name":"exchangeFeeCollectorAccountId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"exchangeId","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"error","name":"ExchangeNotFound","inputs":[{"name":"exchangeId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"OnlyExchangePassOwner","inputs":[]},{"type":"function","name":"execute","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"commands","type":"tuple[]","internalType":"struct Command[]","components":[{"name":"commandType","type":"uint8","internalType":"enum CommandType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"}]}],"outputs":[{"name":"outputs","type":"bytes[]","internalType":"bytes[]"},{"name":"usdNodeMarginInfo","type":"tuple","internalType":"struct MarginInfo","components":[{"name":"collateral","type":"address","internalType":"address"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"},{"name":"initialDelta","type":"int256","internalType":"int256"},{"name":"maintenanceDelta","type":"int256","internalType":"int256"},{"name":"liquidationDelta","type":"int256","internalType":"int256"},{"name":"dutchDelta","type":"int256","internalType":"int256"},{"name":"adlDelta","type":"int256","internalType":"int256"},{"name":"initialBufferDelta","type":"int256","internalType":"int256"},{"name":"liquidationMarginRequirement","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"executeBySig","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"commands","type":"tuple[]","internalType":"struct Command[]","components":[{"name":"commandType","type":"uint8","internalType":"enum CommandType"},{"name":"inputs","type":"bytes","internalType":"bytes"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"}]},{"name":"sig","type":"tuple","internalType":"struct EIP712Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"extraSignatureData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"outputs","type":"bytes[]","internalType":"bytes[]"},{"name":"usdNodeMarginInfo","type":"tuple","internalType":"struct MarginInfo","components":[{"name":"collateral","type":"address","internalType":"address"},{"name":"marginBalance","type":"int256","internalType":"int256"},{"name":"realBalance","type":"int256","internalType":"int256"},{"name":"initialDelta","type":"int256","internalType":"int256"},{"name":"maintenanceDelta","type":"int256","internalType":"int256"},{"name":"liquidationDelta","type":"int256","internalType":"int256"},{"name":"dutchDelta","type":"int256","internalType":"int256"},{"name":"adlDelta","type":"int256","internalType":"int256"},{"name":"initialBufferDelta","type":"int256","internalType":"int256"},{"name":"liquidationMarginRequirement","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"error","name":"BackstopLpWithdrawPeriodInactive","inputs":[{"name":"backstopLpAccountId","type":"uint128","internalType":"uint128"},{"name":"blockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"GlobalWithdrawLimitReached","inputs":[{"name":"collateral","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidCommandType","inputs":[{"name":"commandType","type":"uint8","internalType":"enum CommandType"}]},{"type":"error","name":"TransferFromAndToSameAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"ZeroTransfer","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"error","name":"ZeroWithdraw","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"collateral","type":"address","internalType":"address"}]},{"type":"function","name":"addToFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getDeniers","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagAllowAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFeatureFlagDenyAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFeatureAllowed","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeFromFeatureFlagAllowlist","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDeniers","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"deniers","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFeatureFlagAllowAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"allowAll","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFeatureFlagDenyAll","inputs":[{"name":"feature","type":"bytes32","internalType":"bytes32"},{"name":"denyAll","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"FeatureFlagAllowAllSet","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"allowAll","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"FeatureFlagAllowlistAdded","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeatureFlagAllowlistRemoved","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeatureFlagDeniersReset","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"deniers","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"FeatureFlagDenyAllSet","inputs":[{"name":"feature","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"denyAll","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"function","name":"getCollateralPoolIdOfMarket","inputs":[{"name":"marketId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getLastCreatedMarketId","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"registerMarket","inputs":[{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"marketId","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"setRiskBlockId","inputs":[{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"riskBlockId","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"IncorrectMarketInterface","inputs":[{"name":"market","type":"address","internalType":"address"}]},{"type":"error","name":"InstrumentNotFound","inputs":[{"name":"instrumentAddress","type":"address","internalType":"address"}]},{"type":"error","name":"MissingRiskBlock","inputs":[{"name":"riskBlockId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ZeroQuoteCollateralAddress","inputs":[]},{"type":"function","name":"isInstrumentRegistered","inputs":[{"name":"instrumentAddress","type":"address","internalType":"address"}],"outputs":[{"name":"isRegisteredFlag","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setInstrumentRegistrationFlag","inputs":[{"name":"instrumentAddress","type":"address","internalType":"address"},{"name":"isRegistered","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"configureCollateralPoolInsuranceFund","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"config","type":"tuple","internalType":"struct InsuranceFundConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCollateralPoolInsuranceFundConfiguration","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"config","type":"tuple","internalType":"struct InsuranceFundConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"}]}],"stateMutability":"view"},{"type":"error","name":"InvalidInsuranceFundConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct InsuranceFundConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"}]}]},{"type":"function","name":"acceptOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getImplementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"nominateNewOwner","inputs":[{"name":"newNominatedOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"nominatedOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceNomination","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"simulateUpgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnerChanged","inputs":[{"name":"oldOwner","type":"address","indexed":false,"internalType":"address"},{"name":"newOwner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnerNominated","inputs":[{"name":"newOwner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"self","type":"address","indexed":true,"internalType":"address"},{"name":"implementation","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ImplementationIsSterile","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"NoChange","inputs":[]},{"type":"error","name":"NotAContract","inputs":[{"name":"contr","type":"address","internalType":"address"}]},{"type":"error","name":"NotNominated","inputs":[{"name":"addr","type":"address","internalType":"address"}]},{"type":"error","name":"UpgradeSimulationFailed","inputs":[]},{"type":"function","name":"configureProtocol","inputs":[{"name":"config","type":"tuple","internalType":"struct ProtocolConfiguration.Data","components":[{"name":"oracleManagerAddress","type":"address","internalType":"address"},{"name":"exchangePassNFTAddress","type":"address","internalType":"address"},{"name":"feeCollectorAccountId","type":"uint128","internalType":"uint128"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getProtocolConfiguration","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct ProtocolConfiguration.Data","components":[{"name":"oracleManagerAddress","type":"address","internalType":"address"},{"name":"exchangePassNFTAddress","type":"address","internalType":"address"},{"name":"feeCollectorAccountId","type":"uint128","internalType":"uint128"}]}],"stateMutability":"pure"},{"type":"function","name":"configureLiquidation","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"config","type":"tuple","internalType":"struct LiquidationConfig","components":[{"name":"bidKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"queueDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"maxOrdersInBid","type":"uint256","internalType":"uint256"},{"name":"maxBidsInQueue","type":"uint256","internalType":"uint256"},{"name":"bidScoreWeight","type":"uint256","internalType":"UD60x18"},{"name":"backstopKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"adlExecutionKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"dDutchMin","type":"uint256","internalType":"UD60x18"},{"name":"dMax","type":"uint256","internalType":"UD60x18"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"configureRiskMultipliers","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"config","type":"tuple","internalType":"struct RiskMultipliers","components":[{"name":"imMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"mmrMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"dutchMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"adlMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"imBufferMultiplier","type":"uint256","internalType":"UD60x18"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createRiskMatrix","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"values","type":"int64[][]","internalType":"SD1x18[][]"}],"outputs":[{"name":"blockId","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"getBackstopLPConfig","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"config","type":"tuple","internalType":"struct BackstopLPConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"},{"name":"minFreeCollateralThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"withdrawCooldownDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"withdrawDurationInSeconds","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getLiquidationConfig","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct LiquidationConfig","components":[{"name":"bidKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"queueDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"maxOrdersInBid","type":"uint256","internalType":"uint256"},{"name":"maxBidsInQueue","type":"uint256","internalType":"uint256"},{"name":"bidScoreWeight","type":"uint256","internalType":"UD60x18"},{"name":"backstopKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"adlExecutionKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"dDutchMin","type":"uint256","internalType":"UD60x18"},{"name":"dMax","type":"uint256","internalType":"UD60x18"}]}],"stateMutability":"view"},{"type":"function","name":"getRiskBlockMatrix","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"blockId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"int64[][]","internalType":"SD1x18[][]"}],"stateMutability":"view"},{"type":"function","name":"getRiskBlockMatrixByMarket","inputs":[{"name":"marketId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"int64[][]","internalType":"SD1x18[][]"}],"stateMutability":"view"},{"type":"function","name":"getRiskMultipliers","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct RiskMultipliers","components":[{"name":"imMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"mmrMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"dutchMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"adlMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"imBufferMultiplier","type":"uint256","internalType":"UD60x18"}]}],"stateMutability":"view"},{"type":"function","name":"setBackstopLPConfig","inputs":[{"name":"collateralPoolId","type":"uint128","internalType":"uint128"},{"name":"config","type":"tuple","internalType":"struct BackstopLPConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"},{"name":"minFreeCollateralThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"withdrawCooldownDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"withdrawDurationInSeconds","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"InvalidBackstopConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct BackstopLPConfig","components":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"liquidationFee","type":"uint256","internalType":"UD60x18"},{"name":"minFreeCollateralThresholdInUSD","type":"uint256","internalType":"uint256"},{"name":"withdrawCooldownDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"withdrawDurationInSeconds","type":"uint256","internalType":"uint256"}]}]},{"type":"error","name":"InvalidBackstopLPAccount","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"InvalidLiquidationConfiguration","inputs":[{"name":"config","type":"tuple","internalType":"struct LiquidationConfig","components":[{"name":"bidKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"queueDurationInSeconds","type":"uint256","internalType":"uint256"},{"name":"maxOrdersInBid","type":"uint256","internalType":"uint256"},{"name":"maxBidsInQueue","type":"uint256","internalType":"uint256"},{"name":"bidScoreWeight","type":"uint256","internalType":"UD60x18"},{"name":"backstopKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"adlExecutionKeeperFee","type":"uint256","internalType":"UD60x18"},{"name":"dDutchMin","type":"uint256","internalType":"UD60x18"},{"name":"dMax","type":"uint256","internalType":"UD60x18"}]}]},{"type":"error","name":"InvalidRiskMatrix","inputs":[{"name":"riskMatrix","type":"int64[][]","internalType":"SD1x18[][]"}]},{"type":"error","name":"InvalidRiskMultipliers","inputs":[{"name":"config","type":"tuple","internalType":"struct RiskMultipliers","components":[{"name":"imMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"mmrMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"dutchMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"adlMultiplier","type":"uint256","internalType":"UD60x18"},{"name":"imBufferMultiplier","type":"uint256","internalType":"UD60x18"}]}]},{"type":"error","name":"PRBMath_SD59x18_Abs_MinSD59x18","inputs":[]},{"type":"function","name":"executeLiquidationBid","inputs":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"bidSubmissionKeeperId","type":"uint128","internalType":"uint128"},{"name":"liquidationBid","type":"tuple","internalType":"struct LiquidationBid","components":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"hookAddress","type":"address","internalType":"address"},{"name":"liquidatorRewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]}],"outputs":[{"name":"output","type":"tuple","internalType":"struct ExecuteLiquidationBidOutput","components":[{"name":"lmrDelta","type":"uint256","internalType":"uint256"},{"name":"rewards","type":"tuple","internalType":"struct LiquidationRewards","components":[{"name":"insuranceFund","type":"uint256","internalType":"uint256"},{"name":"backstopLP","type":"uint256","internalType":"uint256"},{"name":"keeper","type":"uint256","internalType":"uint256"},{"name":"liquidator","type":"uint256","internalType":"uint256"}]},{"name":"marketOutputs","type":"bytes[]","internalType":"bytes[]"}]}],"stateMutability":"nonpayable"},{"type":"error","name":"AccountInsolvent","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marginBalance","type":"int256","internalType":"int256"}]},{"type":"error","name":"CheckSelfCall","inputs":[{"name":"caller","type":"address","internalType":"address"}]},{"type":"error","name":"IncreasedLmDueLiquidation","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"lmrBefore","type":"uint256","internalType":"uint256"},{"name":"lmrAfter","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidPostLiquidationHookResponse","inputs":[]},{"type":"error","name":"InvalidPreLiquidationHookResponse","inputs":[]},{"type":"function","name":"executeDutchLiquidation","inputs":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"data","type":"tuple","internalType":"struct DutchLiquidationInput","components":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct DutchLiquidationOutput","components":[{"name":"lmrDelta","type":"uint256","internalType":"uint256"},{"name":"healthPre","type":"uint256","internalType":"UD60x18"},{"name":"rewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"rewards","type":"tuple","internalType":"struct LiquidationRewards","components":[{"name":"insuranceFund","type":"uint256","internalType":"uint256"},{"name":"backstopLP","type":"uint256","internalType":"uint256"},{"name":"keeper","type":"uint256","internalType":"uint256"},{"name":"liquidator","type":"uint256","internalType":"uint256"}]},{"name":"marketOutputs","type":"bytes[]","internalType":"bytes[]"}]}],"stateMutability":"nonpayable"},{"type":"error","name":"AccountAboveDutch","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"AccountAboveLm","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"AccountBelowAdl","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"InvalidMarketIdOrder","inputs":[{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"}]},{"type":"error","name":"LiquidationBidOrdersOverflow","inputs":[{"name":"numberOfOrders","type":"uint256","internalType":"uint256"},{"name":"maxOrders","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MarketsAndInputsMismatch","inputs":[{"name":"numberOfMarketIds","type":"uint256","internalType":"uint256"},{"name":"numberOfInputs","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NonActiveMarketInLiquidationBid","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"marketId","type":"uint128","internalType":"uint128"}]},{"type":"error","name":"ZeroLiquidationBidOrders","inputs":[]},{"type":"function","name":"executeMatchOrder","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"exchangeId","type":"uint128","internalType":"uint128"},{"name":"counterpartyAccountIds","type":"uint128[]","internalType":"uint128[]"},{"name":"orderInputs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"output","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"error","name":"InvalidMatchOrderFees","inputs":[{"name":"matchOrderFees","type":"tuple","internalType":"struct MatchOrderFees","components":[{"name":"protocolFeeCredit","type":"uint256","internalType":"uint256"},{"name":"exchangeFeeCredit","type":"uint256","internalType":"uint256"},{"name":"takerFeeDebit","type":"uint256","internalType":"uint256"},{"name":"makerPayments","type":"int256[]","internalType":"int256[]"}]}]},{"type":"error","name":"NoCounterpartiesInMatchOrder","inputs":[]},{"type":"function","name":"executeBackstopLiquidation","inputs":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"keeperAccountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"backstopPercentage","type":"uint256","internalType":"UD60x18"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"AccountAboveAdl","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"AccountAboveIMBuffer","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"InvalidBackstopPercentage","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"backstopPercentage","type":"uint256","internalType":"UD60x18"}]},{"type":"function","name":"executeTopRankedLiquidationBid","inputs":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"bidSubmissionKeeperId","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ExecuteTopRankedLiquidationBidOutput","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"bidQueueIndex","type":"uint256","internalType":"uint256"},{"name":"bidIndex","type":"uint256","internalType":"uint256"},{"name":"executionOutput","type":"tuple","internalType":"struct ExecuteLiquidationBidOutput","components":[{"name":"lmrDelta","type":"uint256","internalType":"uint256"},{"name":"rewards","type":"tuple","internalType":"struct LiquidationRewards","components":[{"name":"insuranceFund","type":"uint256","internalType":"uint256"},{"name":"backstopLP","type":"uint256","internalType":"uint256"},{"name":"keeper","type":"uint256","internalType":"uint256"},{"name":"liquidator","type":"uint256","internalType":"uint256"}]},{"name":"marketOutputs","type":"bytes[]","internalType":"bytes[]"}]}]}],"stateMutability":"nonpayable"},{"type":"error","name":"EmptyLiquidationBidQueue","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"}]},{"type":"error","name":"IncorrectLiquidationHookInterface","inputs":[{"name":"liquidationBid","type":"tuple","internalType":"struct LiquidationBid","components":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"hookAddress","type":"address","internalType":"address"},{"name":"liquidatorRewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]}]},{"type":"error","name":"LiquidationBidRewardOverflow","inputs":[{"name":"liquidationBid","type":"tuple","internalType":"struct LiquidationBid","components":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"hookAddress","type":"address","internalType":"address"},{"name":"liquidatorRewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]}]},{"type":"function","name":"getLiquidationBidQueue","inputs":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"quoteCollateral","type":"address","internalType":"address"}],"outputs":[{"name":"output","type":"tuple","internalType":"struct LiquidationBidQueueOutput","components":[{"name":"bidQueueIndex","type":"uint256","internalType":"uint256"},{"name":"expirationTimestamp","type":"uint256","internalType":"uint256"},{"name":"bids","type":"tuple[]","internalType":"struct LiquidationBidQueueItem[]","components":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"bid","type":"tuple","internalType":"struct LiquidationBid","components":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"hookAddress","type":"address","internalType":"address"},{"name":"liquidatorRewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]},{"name":"score","type":"uint256","internalType":"uint256"}]}]}],"stateMutability":"view"},{"type":"function","name":"submitLiquidationBid","inputs":[{"name":"liquidatableAccountId","type":"uint128","internalType":"uint128"},{"name":"liquidationBid","type":"tuple","internalType":"struct LiquidationBid","components":[{"name":"liquidatorAccountId","type":"uint128","internalType":"uint128"},{"name":"hookAddress","type":"address","internalType":"address"},{"name":"liquidatorRewardParameter","type":"uint256","internalType":"UD60x18"},{"name":"quoteCollateral","type":"address","internalType":"address"},{"name":"marketIds","type":"uint128[]","internalType":"uint128[]"},{"name":"inputs","type":"bytes[]","internalType":"bytes[]"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct SubmitLiquidationBidOutput","components":[{"name":"bidQueueIndex","type":"uint256","internalType":"uint256"},{"name":"bidScore","type":"uint256","internalType":"uint256"},{"name":"bidIndex","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"error","name":"AccountAboveMmr","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"AccountBelowLm","inputs":[{"name":"accountId","type":"uint128","internalType":"uint128"},{"name":"delta","type":"int256","internalType":"int256"}]},{"type":"error","name":"LiquidationBidQueueOverflow","inputs":[]},{"type":"error","name":"PRBMath_UD60x18_Convert_Overflow","inputs":[{"name":"x","type":"uint256","internalType":"uint256"}]}]
*/